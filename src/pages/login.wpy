<style lang="scss">
    page{
        width: 100%;
        height: 100%;
    }
   .container{
       position: relative;
       width: 100%;
       height: 100%;
       background-color: lightpink;
       .img-box{
           width: 100rpx;
           height: 100rpx;
       }
       .image-box{
           width: 100rpx;
           height: 100rpx;
           position: absolute;
           /*top: 0;*/
           /*left: 0;*/
           border: 1px solid #000;
           image{
               width: 100%;
               height: 100%;
           }
           .btn1{
               position: absolute;
               bottom: 0;
               right: 0;
               width: 20rpx;
               height: 20rpx;
               background-color:blue;
           }
       }
   }
</style>

<template>
    <view class="container">
        <view class="image-box" @touchstart="WraptouchStart" @touchmove="WraptouchMove" catch="WraptouchMove" style="top:{{img.top}}rpx;left:{{img.left}}rpx">
            <image src="{{img.image}}" data-id="box" ></image>
            <view class="btn1"></view>
        </view>

    </view>
</template>
<script>
  import wepy from 'wepy'

  export default class extends wepy.page {
    config = {
      'pageOrientation': 'landscape'
    }
    data= {
      img: {
        id: 1,
        image: './../images/atm.png', // 图片地址
        top: 100, // 初始图片的位置
        left: 100,
        x: 155,  // 初始圆心位置，可再downImg之后又宽高和初始的图片位置得出
        y: 155,
        scale: 1, // 缩放比例  1为不缩放
        angle: 0, // 旋转角度
        active: false // 判定点击状态
      }
    }
    methods={
      WraptouchStart: function (e) {
        // e.currentTarget.dataset.id
        console.log(e.currentTarget.dataset.id)
        this.img.lx = e.touches[0].clientX  // 记录点击时的坐标值
        this.img.ly = e.touches[0].clientY
        this.setData({   // 赋值
          img: this.img
        })
        console.log(this.img)
      },
      WraptouchMove: function (e) {
        console.log('haha')
        // 移动时的坐标值也写图片的属性里
        this.img._lx = e.touches[0].clientX
        this.img._ly = e.touches[0].clientY

        // 追加改动值
        this.img.left += this.img._lx - this.img.lx // x方向
        this.img.top += this.img._ly - this.img.ly    // y方向
        this.img.x += this.img._lx - this.img.lx
        this.img.y += this.img._ly - this.img.ly

        // 把新的值赋给老的值
        this.img.lx = e.touches[0].clientX
        this.img.ly = e.touches[0].clientY
        this.setData({ // 赋值就移动了
          img: this.img
        })
        console.log(this.img)
      },
      touchStart: function (e) {
        // 找到点击的那个图片对象，并记录
        this.img.active = true
        // 获取作为移动前角度的坐标
        this.img.tx = e.touches[0].clientX
        this.img.ty = e.touches[0].clientY
        // 移动前的角度
        this.img.anglePre = this.countDeg(this.img.x, this.img.y, this.img.tx, this.img.ty)
        // 获取图片半径
        this.img.r = this.getDistancs(this.img.x, this.img.y, this.img.left,this.img.top)
      }
    }
  }
</script>
